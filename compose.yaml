services:
  app:
    build:
      context: .
      dockerfile: deploy/Dockerfile.app
      target: production
      args:
        DATABASE_URL: ${DATABASE_URL}
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    networks:
      - transcendence_net
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - prisma:/app/prisma
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    build:
      context: .
      dockerfile: deploy/Dockerfile.nginx
      target: production
    ports:
      - "80:80"
    networks:
      - transcendence_net
    depends_on:
      app:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:8.0.2
    # TODO 提出前にports削除
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    networks:
      - transcendence_net
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  redis:
  app:
    driver: local
    driver_opts:
      type: none
      device: ./
      o: bind
  prisma:

networks:
  transcendence_net:
